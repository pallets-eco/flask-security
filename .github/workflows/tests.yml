

name: tests
on:
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
  pull_request:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {python: '3.9', tox: 'py39-release'}
          - {python: '3.9', tox: 'py39-low'}
          - {python: '3.10', tox: 'py310-release'}
          - {python: '3.10', tox: 'py310-low'}
          - {python: '3.11', tox: 'py311-release'}
          - {python: '3.11', tox: 'py311-low'}
          - {python: '3.12', tox: 'py312-release' }
          - {python: '3.12', tox: 'py312-low' }
          - {python: 'pypy-3.9', tox: 'pypy39-release'}
          - {python: 'pypy-3.9', tox: 'pypy39-low'}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: update pip
        run: |
          python -m pip install -U pip
      - name: cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.tox }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('requirements/*.txt') }}
      - name: run tests
        run: |
          pip install tox
          tox -e ${{ matrix.tox }}

  lint:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: update pip
          run: |
            python -m pip install -U pip
        - name: Style, docs, mypy
          run: |
            pip install tox
            tox -e style,docs,mypy

  other:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: update pip
          run: |
            python -m pip install -U pip
        - name: nobabel, nowebauthn, noauthlib, noflasksqlalchemy, async
          run: |
            pip install tox
            tox -e nobabel,nowebauthn,noauthlib,noflasksqlalchemy,async
  cov:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: update pip
          run: |
            python -m pip install -U pip
        - name: Coverage
          run: |
            pip install tox coverage
            tox -e coverage
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v4
          with:
            fail_ci_if_error: true
            verbose: true
            token: ${{ secrets.codecov_token }}
  realdb:
      runs-on: ubuntu-latest

      services:
        postgres:
          image: postgres:latest
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: testpw
            POSTGRES_DB: testdb
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: update pip
          run: |
            python -m pip install -U pip
        - name: cache pip
          uses: actions/cache@v4
          with:
            path: ~/.cache/pip
            key: pip-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('requirements/*.txt') }}
        - name: Postgres
          run: |
            pip install tox
            tox -e realpostgres -- --realdburl='postgresql://postgres:testpw@localhost:5432/testdb'
