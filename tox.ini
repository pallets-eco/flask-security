[tox]
envlist =
    py{36,37,38,39,py38}-{low,release}
    mypy
    nobabel
    style
    docs
    coverage
    makedist
skip_missing_interpreters = true

[testenv:py{36,37,38,39,py38}-release]
deps =
    -r requirements/tests.txt
commands =
    python setup.py compile_catalog
    pytest --basetemp={envtmpdir} {posargs:tests}

[testenv:py{36,37,38,39,py38}-low]
deps =
    pytest

    # Lowest supported versions
    Flask==1.1.2
    Flask-SQLAlchemy==2.4.4
    Flask-Babel==2.0.0
    Flask-Mail==0.9.1
    Flask-Mongoengine==1.0.0
    peewee==3.11.2
    argon2_cffi==20.1.0
    babel==2.7.0
    bcrypt==3.2.0
    bleach==3.2.2
    cryptography==3.0.0
    # next 2 come from minimums from Flask 1.1.1
    jinja2==2.11.0
    itsdangerous==1.1.0
    markupsafe==2.0.1
    mongoengine==0.22.1
    mongomock==3.22.0
    pony==0.7.14;python_version<'3.10'
    phonenumberslite==8.11.1
    pyqrcode==1.2
    sqlalchemy==1.3.19
    sqlalchemy-utils==0.36.5
    werkzeug==0.16.1
    zxcvbn==4.4.28
commands =
    python setup.py compile_catalog
    pytest --basetemp={envtmpdir} {posargs:tests}

# manual test to check how we're keeping up with Pallets latest
[testenv:py38-main]
deps =
    -r requirements/tests.txt
    git+git://github.com/pallets/werkzeug@main#egg=werkzeug
    git+git://github.com/pallets/flask@main#egg=flask
    git+git://github.com/pallets/flask-sqlalchemy@main#egg=flask-sqlalchemy
    git+git://github.com/pallets/jinja@main#egg=jinja2
    git+git://github.com/wtforms/wtforms@master#egg=wtforms
    git+git://github.com/maxcountryman/flask-login@main#egg=flask-login
commands =
    python setup.py compile_catalog
    pytest --basetemp={envtmpdir} {posargs:tests}

[testenv:nobabel]
basepython = python3.8
deps =
    -r requirements/tests.txt
commands =
    pip uninstall -y babel flask_babel
    pytest --basetemp={envtmpdir} {posargs:tests}

# manual test to verify we still work with Flask-BabelEx
[testenv:babelex]
deps =
    -r requirements/tests.txt
    flask_babelex
commands =
    pip uninstall -y flask_babel
    python setup.py compile_catalog
    pytest --basetemp={envtmpdir} {posargs:tests}

[testenv:style]
deps = pre-commit
skip_install = true
commands =
    pre-commit autoupdate
    pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
deps = -r requirements/docs.txt
commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html


[testenv:coverage]
deps =
    -r requirements/tests.txt
commands =
    python setup.py compile_catalog
    coverage run --source=flask_security -m pytest

[testenv:realpostgres]
deps =
    -r requirements/tests.txt
    psycopg2
commands =
    # Requires that --realdburl be set otherwise doesn't actually use DB
    python setup.py compile_catalog
    pytest --basetemp={envtmpdir} {posargs}

[testenv:makedist]
deps =
    -r requirements/tests.txt
commands =
    python setup.py compile_catalog
    python setup.py sdist bdist_wheel

[testenv:mypy]
deps =
    -r requirements/tests.txt
    types-setuptools
    mypy
    sqlalchemy[mypy]
commands =
    mypy --install-types --non-interactive flask_security tests
